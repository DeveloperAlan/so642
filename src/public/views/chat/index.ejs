<!doctype html>
<!--[if lt IE 7]> <html class="no-js ie6 oldie" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js ie7 oldie" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js ie8 oldie" lang="en"> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en"> <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

  <title></title>
  <meta name="description" content="This website is an entry for nodeknockout2011">
  <meta name="author" content="jcolebrand, raynos, yojimbo87">

  <meta name="viewport" content="width=device-width,initial-scale=1">

  <link rel="stylesheet" href="/css/chat.css">  
  <link href='http://fonts.googleapis.com/css?family=Aldrich' rel='stylesheet' type='text/css'>
  <script src="/js/libs/modernizr-2.0.6.min.js"></script>
  
</head>
<body>
<div id="container">
  <!-- this is the chat window side -->
  <div id="transcript">
    <!-- this is where we type in at -->
    <div id="chatter" class="background">
      <% if (user) { %>
      <table width="100%">
        <tr>
          <td width="110px">
            <img src="http://gravatar.com/avatar/<%= user.gravatar_hash %>" title="this is your gravatar" />
          </td>
          <td>
            <textarea id="input"></textarea>
          </td>
          <td width="200" style="vertical-align: top;">
            <span id="sayit-button" class="button">speak</span>
            <span id="cancel-editing-button" class="button">cancel</span>
            <a id="chat-format-help" href="/faq#format" target="_blank" class="button" title="How do I format my code?">format?</a>
            <span id="codify-button" class="button hidden" title="Toggle fixed-width formatting (ctrl+k)">fixed width font</span>
          </td>
        </tr>
      </table>
      <% } else { %>
      <table width="100%">
        <tr>
          <td width="110px">
            
          </td>
          <td>
            <h1><a href="/auth/" title="You really get the full benefit by joining us :D" style="text-decoration: none; color: #800000;">Please login to participate</a></h1>
          </td>
          <td width="200" style="vertical-align: top;">
          </td>
        </tr>
      </table>
      <% } %>
    </div>  
    <div id="chat">
    </div>
  </div>
  <!-- this is the other panel side -->
  <div id="roominfopanel">
    <div class="sidebarpanel">
      <div>
        <a class="button" href="/rooms/">room list</a>
        <div id="searchblock" class="right padlink">
          <input type="text" size="25" name="search" value="Search" id="search" class="untouched"/>
        </div>
        <div>
          <span class="currentroomname"><%= room.name %></span>
          <span class="currentroomdescription"><%= room.description %></span>
          <span class="currentroomid"><%= room.id %></span>
        </div>
      </div>
    </div>
    <div class="sidebarpanel">
      <span class="sidebarpanelheader">Users Currently Here</span>
      <div id="userList">
      </div>
    </div>
    <div class="sidebarpanel">
      <span class="sidebarpanelheader">Starred Posts</span>
      <div class="starList">
      </div>
    </div>
  </div>  
</div> <!--! end of #container -->

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js"></script>
<script>window.jQuery || document.write('<script src="js/libs/jquery-1.6.2.min.js"><\/script>')</script>
<script src="http://ajax.aspnetcdn.com/ajax/jquery.templates/beta1/jquery.tmpl.min.js"></script>
<script src="/js/jquery.scrollTo-1.4.2-min.js"></script>
<script src="/js/jquery.debounce.js"></script>

<!-- this is where the magic happens people -->
<script src='/socket.io/socket.io.js'></script>

<script id="messagebox" type="text/x-jquery-tmpl">
  <div class="messagebox left ${isUser}">
    <div class="userbox">
      <img src="http://gravatar.com/avatar/${gravatar_hash}" id="user-${userid}" title="${name}" class="userimage"/>
      <span class="username">${name}</span>
    </div>
    <div class="messages">
      <div id="message-${id}" class="message">
        <div class="timestamp">${id} ${timedisplay}</div>
        <a class="action-link" href="/users/${userid}"></a>
        <div class="meta"></div>
        <span class="content"></span>
        <div class="flash"></div>
      </div>
    </div>
  </div>
</script>

<script id="userimage" type="text/x-jquery-tmpl">
  <img src="http://gravatar.com/avatar/${gravatar_hash}" id="user-${id}" title="${name}" class="userimage"/>
</script>

<script>
/**
 * this is for the search box
 */
(function($,id){
    $(id)
      .click( searchClick )
      .blur( searchBlur )
      .keypress( searchKeypress )
      .keyup( searchKeyup )
    
    function searchClick(event){
      var that = $(this)
      if (that && that.hasClass('untouched') && that.val() === 'Search' ){
        that.removeClass('untouched').val('')
      }
    }
    
    function searchBlur(event){
      var that = $(this)
      if (that && !that.hasClass('untouched') && ( that.val() === 'Search' || that.val() === '' )){
        that.addClass('untouched').val('Search')
      }
    }
    
    function searchKeypress(event){
      var that = $(this)
      /* if they press enter */
      if( that && event.which === 13 ){
        /* TODO */
        /* do something here to search for the value and redirect */
      }
    }
    
    function searchKeyup(event){
      var that = $(this)
      /* if they press esc */
      if( that && event.which === 27 ){
        that.val('')
      }
    }
  })(window.jQuery,'#search');

  function sayIt(message){
        /* TODO */
    /* sanity check to not send dumb shit. Should probably html encode as well. */
    if (message === ''){ return; }
    socket.emit("sendMessage", {
      room: roomId,
      text: message
    })
  }
  
  var sayit = '#sayit-button',
      input = '#input',
      cancel = '#cancel-editing-button',
      code = '#codify-button',
      messageTemplate = $('#messagebox').template(),
      userimageTemplate = $('#userimage').template(),
      roomId = <%= room.id.toString() %>, 
      userId = <% if(user) { %><%= user.id %><% } else { %>0<% } %>,
      userArray = {},
      messageArray = {},
      aux = 0;
  
  $(sayit).click( speak );
  $(input).keypress( inputKeypress );
  $(input).keyup( inputKeyup );
  $(cancel).click( cancelInput );
  
  function cancelInput(event){
    var inp = $(input),
        aux = 0;
    inp.val('');
  }
  
  function inputKeyup(event){
    var inp = $(input),
        skip = false,
        aux = 0;
    
    switch(event.which){
        /* TODO */
      case 27: //esc
        inp.val('');
        skip = true;
        break;
    }
    if (skip){
      event.preventDefault();
    }
  }
  
  function inputKeypress(event) {
        /* TODO */
    var n = false,
        inp = $(input),
        aux = 0;
        
    switch (event.which) {
      case 13: // enter
          if (!event.shiftKey) {
            sayIt( inp.val() );
            inp.val('');
            /* set enter to true to consume the enter and prevent it from showing up in the box */
            n = true;
            /* this is where submits happen */
          } else {
            /* they pressed shift+enter */
          }
          break;
      case 38: //up arrow
          /* future keyboard navigation here */
          break;
      case 40: //down arrow
          /* future keyboard navigation here */
          break;
      case 76: //k (on ctrl+k format for code)
          if (event.ctrlKey) {
              wb();
              n = true
          }
          break;
    }
    /* check here to see how many characters they have typed, and warn them if they've gone too far */
    if (n)
        event.preventDefault();
  }
  
  function wb() {
    var a = $("#input").val(), f = a.split(/[\n\r]/g), l = false, n = false;
    $.each(f, function(s, z) {
        if (z.match(/^ {4,}/))
            l = true;
        else
            n = true
    });
    l && !n ? $.each(f, function(s, z) {
        f[s] = z.substring(4)
    }) : $.each(f, function(s, z) {
        f[s] = "    " + z
    });
    a = f.join("\n");
    $("#input").val(a)
  }
  
  function speak(event){
    var n = false,
        inp = $(input),
        aux = 0;
    sayIt( inp.val() );
    inp.val('');
  }
  
  
  function renderMessage(message) {
    /* get the user so we can have their details */
    var user = userArray[message.owner_id];
    
    /* if we didn't have a user, let's get one and try this again */
    if (!user) {
      socket.emit("request:user", message.owner_id, function(user) {
        reRenderUserMessage(user, message);
      });
      return;
    }
    
    if (message.type !== "message") { 
      /* we need to handle other message types differently here */
      /* TODO */
      return; 
    }

    var data = {};
    data.name = user.name;
    data.userid = user.id;
    data.gravatar_hash = user.gravatar_hash;
    data.isUser = (userId === message.owner_id) ? 'mine' : '';
    
    data.id = message.id;
    data.userid = message.owner_id;
    data.deleted = message.deleted;
    data.starred = message.starred.length;
    data.flagged = message.flagged.length;
    data.timestamp = message.timestamp;
    data.timedisplay = new Date(data.timestamp).toLocaleTimeString();
    data.history = message.history;
    
    //if the message doesn't exist yet in the local array
    var previousMessage = $('#message-'+message.id).parents('.messagebox');
    if (!previousMessage.size()){
    
      /* since we need to now insert this into the page somewhere, we need to find the best place to put it */
      
      /* this is the naive way */
      //push the data into the template on the page
      //$.tmpl( messagebox, data ).appendTo( '#chat' );
      var inserted_message;
      previousMessage = $('#chat');
      var previousid = 0;
      
      for (var k in messageArray){ var m = messageArray[k];
        if (parseInt(m.id) > parseInt(previousid) && parseInt(m.id) < parseInt(message.id)){
          previousid = m.id;
        }
      }
      
      if (previousid){ previousMessage = $('#message-'+previousid).parents('.messagebox');}

      inserted_message = $.tmpl( messagebox, data );
      
      if (previousMessage.attr('id') === 'chat'){
        previousMessage.append(inserted_message);
      } else {
        previousMessage.after(inserted_message);
      }
    } else {
      /* just remove the previous message and replace it with the new one */
      inserted_message = $.tmpl( messagebox, data );
      previousMessage.after(inserted_message);
      if (previousMessage.attr('id') !== 'chat'){
        previousMessage.remove();
      }
    }
    
    /* TODO */
    if (data.deleted) {  /* if data.deleted is null or falsy, show the text, else show deleted.*/
      inserted_message.find('.content').html('<i>Deleted</i>');
    } else if (data.isRendered){  /* if we already parsed and rendered it on the server, excellent, let's use that */
      inserted_message.find('.content').html(message.text);
    }else {  /* otherwise we dont' trust them. Actually, at this point, we should farm this out to another method. */
      inserted_message.find('.content').text(message.text);
    }
    
    /* always go find and scroll to the last message */
    /* only do that if we have messages to scroll and only every quarter second (stop this if we're in keyboad navigation mode tho) */
    /* TODO */
    if ( $('#chat .message').size() ){
      var n = $("#chat div.message:last").eq(0);
      var z = $(window).scrollTop() - n.offset().top;
      if (n && z){
        $.throttle( 250, function() {
          $.scrollTo(n, {offset: -z}) 
        });
      }
    }
    
    messageArray[message.id] = message;
    
    checkForTooManyMessages();
  }
  
  function checkForTooManyMessages(){
      /* TODO */
    /* 100 is fine for now, but we need to keep track of how many messages we've requested from the server and trim them after some time to match */
    if ($('.messagebox').size() > 100){
      var id = $('.messagebox:first').find('.message').attr('id').split('-')[1];
      $('.messagebox:first').remove();
      delete messageArray[id];
      /* do it again since it will abort with less than or equal to 100 */
      checkForTooManyMessages();
    }
  }

  function reRenderUserMessage(user, message) {
    /* this can only be called once a message has been emitted from the server */
    userArray[message.owner_id] = user; /* here we update the user */
    renderMessage(message);
  }
  
</script>

<script>
window.onload = function() {
    window.socket = io.connect();

    function addUser(user, inRoom) {
      if (!userArray[user.id]) {
        userArray[user.id] = user;
      } 
      if (inRoom) {
        renderUserImage(user);           
      }
    }

    function renderUserImage(user) {
      removeUserImage(user.id);
      var tmpl = $.tmpl(userimageTemplate, user);
      tmpl.prependTo('#userList');
    }

    function removeUser(id) {
        delete userArray[id];
        removeUserImage(id);
    }
    
    function removeUserImage(id) {
      $('#userList #user-' + id).remove();   
    }
    
    function removeMessage(id){
      /* need to set the content of the message to deleted and prevent any further action */
      $('#message-'+id).find('.content').html('<i>Deleted</i>');
      delete messageArray[id];
    }

    var input = document.createElement("input");
    var main = document.getElementById("messageBox");

    socket.on("newMessage", function(data) {
      renderMessage(data);
    });

    socket.on("provide:recentMessages", function(data) {
      //messageArray = data.messages;
      data.messages.reverse().forEach(renderMessage);
    });

    socket.on("spamError", function() {
      alert("spammer's are naughty and eventually get banned");
    });

    socket.on("userJoined", function(user) {
      addUser(user.userData, true);
    });

    socket.on("userLeft", function(user) {
      removeUser(user.userId);  
    });

    socket.on("provide:user", function(user) {
      addUser(user, false)
    });

    socket.on("provide:usersInRoom", function(users) {
      users.forEach(function(user) {
        addUser(user, true)
      });
    })

    socket.on("ready", function() {
      socket.emit("joinRoom", {
        room: roomId
      }); 
    });

    socket.on("ready", function() {
      socket.emit("request:recentMessages", roomId);
    });
};
</script>

<script>
/*
  var _gaq=[['_setAccount','UA-25222034-2'],['_trackPageview']]; // Change UA-XXXXX-X to be your site's ID
  (function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];g.async=1;
  g.src=('https:'==location.protocol?'//ssl':'//www')+'.google-analytics.com/ga.js';
  s.parentNode.insertBefore(g,s)}(document,'script'));
*/
</script>
</body>
</html>
